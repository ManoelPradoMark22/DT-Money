  //fora:
  transition: background-color 0.2s; //animacao acontece no hover e quando retira o mouse tb
  
  &:hover {
    background: ${props => props.theme['green-700']};
    transition: background-color 0.2s; //animacao acontece somente no hover
  }

  ______________

por padrao a tag strong vem com o display inline - nesse, nao tem como aplicar margin vertical
, por isso mudamos para o block nesse caso
  strong {
    display: block;
    margin-top: 1rem;
    font-size: 2rem;
  }

  ______________

  usa o collapse separate para poder espacar as linhas e colunas
  border-collapse: separate;
  border-spacing: 0 0.5rem;  // horizontal (colunas) , vertical (linhas)

  ______________
  libs de acessibilidade:
   - ariakit, 
   - headlessui
   - radix-ui  -> os components seguem as normas de acessibilidade
   - chakraui (mas esse ja vem estilizado)

  as Child -> vai fazer com que o Dialog.Trigger nao crie um novo botao, mas que aproveite o botao dentro da tag (q nós criamos)
  <Dialog.Trigger asChild>
    <NewTransactionBtn>Nova transação</NewTransactionBtn>
  </Dialog.Trigger>

  ______________

  Dialog.Portal (do React)  
  fornece uma forma ELEGANTE de renderizar um elemento filho dentro de um OUTRO local da DOM